name: CI

on:
  pull_request:
    branches: [main, dev]
  workflow_dispatch:


jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Download Checkstyle
        run: |
          CHECKSTYLE_VERSION="10.25.1"
          wget https://github.com/checkstyle/checkstyle/releases/download/checkstyle-$CHECKSTYLE_VERSION/checkstyle-$CHECKSTYLE_VERSION-all.jar -O checkstyle.jar

      - name: Run Checkstyle
        run: |
          java -jar checkstyle.jar -c ./checkstyle.xml src/

  build-and-push:
    runs-on: ubuntu-latest
    needs: linter

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.BACKEND_IMAGE }}:staging
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.BACKEND_IMAGE }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.BACKEND_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.BACKEND_IMAGE }}:buildcache,mode=max

  run-api-tests:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout tests-compose repository
      uses: actions/checkout@v4
      with:
        repository: ElectronicLibraryRT/api-tests-docker-compose
        token: ${{ secrets.GH_TOKEN }}

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Run Docker Compose tests
      run: |
        export API_TESTS_IMAGE=${{ vars.API_TESTS_IMAGE }}
        export BACKEND_IMAGE=${{ vars.BACKEND_IMAGE }}
        
        docker compose up --exit-code-from tests
        
